vocab: term - df - posting pointer

index: doc id - frecuencia - positions pointer

positions: position



"software cerca_de casa"

"el águila está en el nido" -> 
	- posting(aguila) + posting(esta) + posting(nido)
	- term_pos[aguila] = [..., ...]
	- term_pos[esta] = [..., ...]

	- term_pos.keys() son los términos, y el valor es la lista de posiciones
	- si mantiene el orden puedo iterarlas como están en la frase
	- 

	- term_pos.keys()[0] = [1, 3]
	- term_pos.keys()[1] = [2, 4]
	- term_pos.keys()[2] = [6, 8]

	pointers = []

	
	for position1 in term_pos.keys()[0]:		# Voy por las posiciones del primer término		
		previous_position = position1	
		for key in term_pos.keys()[1:]:		# Voy por las demás keys			
			# Para esta key me fijo si encuentro una posicion consecutiva
			positions = term_pos[key]
			cons_ok = False
			for position in positions:
				if position == previous_position + 1:
					cons_ok = True
					previous_position = position
					break			# Del tercer for
			if not cons_ok -> break # Del segundo for - No encontré consecutiva -> sigo con la proxima posicion de la primera fila (main for)
			if cons ok sigo con la proxima key
		
		- si sigo acá porque no hubo break es que encontré todas las consecutivas
	
	- Si se terminó el primer for es porque no encontró consecutiva		


		if term_pos[i][pointers[i]] + 1 == term_pos[i+1][pointers[i+1]]
			phrase_ok = True




